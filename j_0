trainingCollection(j_0)     TEST_0

0. P(x_0): [merge(i_0, i_1,...,i_6) AND diff(i_0, i_1,...,i_6)]
1. P(x_1): [merge(i_0, i_1,...,i_6) NAND diff(i_0, i_1,...,i_6)]
2. P(x_2): [merge(i_0, i_1,...,i_6) OR diff(i_0, i_1,...,i_6)]
3. P(x_3): [merge(i_0, i_1,...,i_6) XOR diff(i_0, i_1,...,i_6)]

  i. Cardinality(0->3): 4
  ii. sqrt(4) = 2
# iii. ln(16)/2 = ln(4)
  iv. ln(x) + ln(x+2) = 4
  
  a. trainingCollection(j_1)
    P(alpha): i -> iv, but ~iii
    P(beta): {i, ii, iv}
    ln[Cardinality(P(beta))] => ln(3)
    
    b. Decompose ln(3)
      i. Let g(x,y) = x^y + 2(x+y) - 1 AND h(x,y) = ln(x+y)
      ii. Implication:  f(x,y) = h(g(x,y)) = ln((x+y)^2 + 2(x+y) - 1)
      iii. (x,y) = 3: ln((3+3)^2 + 2(3+3) - 1)
      iv. Quadratic formula:  z = [ -(x+y) ± √ ( (x+y)² - 4(x+y)(ln(x+y) ) ] / 2(x) # Check the logic here
      v. Integrate(z) using polynomial division
      vi. ...To be continued. My head hurts.
      
